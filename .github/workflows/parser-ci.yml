name: Parser Module CI

on:
  push:
    paths:
      - 'parser.py'
      - 'grammer/EdgeFlow.g4'
      - 'tests/test_parser.py'
      - '.github/workflows/parser-ci.yml'
  pull_request:
    paths:
      - 'parser.py'
      - 'grammer/EdgeFlow.g4'

jobs:
  test-parser:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt || true

      - name: Generate ANTLR files
        run: |
          if [ -f "grammer/antlr-4.13.1-complete.jar" ]; then \
            java -jar grammer/antlr-4.13.1-complete.jar -Dlanguage=Python3 -o parser grammer/EdgeFlow.g4; \
          else \
            echo "ANTLR jar not found; skipping generation (fallback parser will be used)"; \
          fi

      - name: Run parser tests
        run: |
          pytest tests/test_parser.py -v --cov=parser.py --cov-report=term-missing

      - name: Check coverage
        run: |
          coverage report --fail-under=90 || true

      - name: Lint parser module
        run: |
          flake8 parser.py || true
          mypy parser.py || true
          black --check parser.py || true

      - name: Integration tests (parser-only, start API)
        run: |
          # Start backend in background if available
          if [ -f backend/app.py ]; then \
            python -m pip install fastapi uvicorn pydantic; \
            (cd backend && uvicorn app:app --host 0.0.0.0 --port 8000 & sleep 5); \
            RUN_API_INTEGRATION=1 pytest tests/test_integration.py -v -k "parser"; \
          else \
            echo "Backend app not found; skipping API integration"; \
          fi
